---
- name: provisioning django_messages testapp
  hosts: localhost
  vars:
    pip_run: "{{ lookup('ansible.builtin.env', 'PIP_INSTALLED', default='False') }}"
  tasks:
    - name: check variable
      debug:
        msg: hey {{ pip_run }}
    - name: Create Pod
      containers.podman.podman_pod:
        name: django_forum_test_pod
        publish: 8000:8000
    - name: Create Redis Container
      containers.podman.podman_container:
        name: redis_cont
        image: docker.io/library/redis
        command: redis-server --appendonly yes
        state: started
        pod: django_forum_test_pod
    - name: Pull Python Image
      containers.podman.podman_image:
        name: docker.io/library/python
        state: present
    - name: Build Custom Python Image
      containers.podman.podman_image:
        name: python
        tag: django_forum_test_image
        path: ./dockerfile_python
        build:
          cache: false
          extra_args: "-f './dockerfile_python/Dockerfile_Test'"
        state: build
      register: build_output
    - debug: var=build_output
    - name: output image info
      shell: exec {{ build_output['podman_actions'][0] }}
      register: image_output
    - debug: var=image_output.stdout_lines
    - name: Create custom container
      containers.podman.podman_container:
        name: django_forum_test_cont
        image: localhost/python:django_forum_test_image
        state: started
        # recreate: true
        detach: true
        volume:
          - "{{ playbook_dir }}/../../../django_forum:/opt/ceramic_isles_test:Z"
          - "certvol:/etc/certs"
        pod: django_forum_test_pod
      register: output
    - debug: var=output.stdout_lines
    - name: podman exec pip install
      shell: podman exec -it django_forum_test_cont bash -c 'source /opt/ceramic_isles_test/venv_django_forum/bin/activate \
             && pip install -r /opt/ceramic_isles_test/django_forum/testapp/dockerfile_python/pip_requirements' && export PIP_INSTALLED="True"
      register: pip_output
      when: 'pip_run|bool != True'
    - debug: var=pip_output # .stdout_lines
    - name: test pytest output
      shell: echo '{{ output.stdout }}'
      register: test_output
    - debug: var=test_output.stdout_lines
